<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.mapper.BlogMapper">
    <resultMap id="blogResultMap" type="com.blog.entity.Blog">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="title" column="title"/>
        <result property="images" column="images"/>
        <result property="content" column="content"/>
        <result property="liked" column="liked"/>
        <result property="comments" column="comments"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="name" column="nick_name"/>
        <result property="icon" column="icon"/>
    </resultMap>

    <select id="selectBlogs" parameterType="java.time.LocalDateTime" resultMap="blogResultMap">
        SELECT
            b.id AS id,
            b.user_id AS user_id,
            b.title AS title,
            b.images AS images,
            b.content AS content,
            b.liked AS liked,
            b.comments AS comments,
            b.create_time AS create_time,
            b.update_time AS update_time,
            u.nick_name AS nick_name,
            u.icon AS icon
        FROM
            blog b
        INNER JOIN
            bk_user u
        ON
            b.user_id = u.id
        WHERE
            b.update_time > #{time}
        ORDER BY b.id DESC
    </select>
    <insert id="insertBlog" parameterType="com.blog.entity.Blog" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO blog (title, user_id, content,images, create_time,update_time)
        VALUES (#{title}, #{userId}, #{content}, #{images}, #{createTime}, #{updateTime})
    </insert>
    <select id="getBlogByUserId" parameterType="Long" resultMap="blogResultMap">
        SELECT
            b.id AS id,
            b.user_id AS user_id,
            b.title AS title,
            b.images AS images,
            b.content AS content,
            b.liked AS liked,
            b.comments AS comments,
            b.create_time AS create_time,
            b.update_time AS update_time,
            u.nick_name AS nick_name,
            u.icon AS icon
        FROM
            blog b
        INNER JOIN
            bk_user u ON b.user_id = u.id
        WHERE
            b.user_id = #{id}
    </select>
    <select id="getBlogById" parameterType="Long" resultMap="blogResultMap">
        SELECT * FROM blog WHERE id = #{id}
    </select>
    <update id="updateBlog" parameterType="com.blog.entity.Blog">
        UPDATE blog
        <set>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="images != null">
                images = #{images},
            </if>
            update_time = #{updateTime}
        </set>
        WHERE id = #{id}
    </update>
    <delete id="deleteBlog" parameterType="Long">
        DELETE FROM blog WHERE id = #{id}
    </delete>
    <update id="likeBlog" parameterType="Long">
        UPDATE blog SET liked = liked + 1 WHERE id = #{id}
    </update>
    <update id="unLikeBlog" parameterType="Long">
            UPDATE blog SET liked = liked - 1 WHERE id = #{id}
    </update>
    <update id="commentBlog" parameterType="Long">
            UPDATE blog SET comments = comments + 1 WHERE id = #{id}
    </update>
    <update id="unCommentBlog" parameterType="Long">
            UPDATE blog SET comments = comments - #{size} WHERE id = #{id}
    </update>
    <select id="searchBlogByTitle" parameterType="String" resultMap="blogResultMap">
        SELECT
            b.id AS id,
            b.user_id AS user_id,
            b.title AS title,
            b.images AS images,
            b.content AS content,
            b.liked AS liked,
            b.comments AS comments,
            b.create_time AS create_time,
            b.update_time AS update_time,
            u.nick_name AS nick_name,
            u.icon AS icon
        FROM
            blog b
        INNER JOIN
            bk_user u ON b.user_id = u.id
        WHERE
            b.title LIKE CONCAT('%', #{title}, '%')
        ORDER BY b.liked DESC, b.update_time DESC
    </select>
    <select id="queryBlogsById" parameterType="java.util.Set" resultMap="blogResultMap">
        SELECT
            b.id AS id,
            b.user_id AS user_id,
            b.title AS title,
            b.images AS images,
            b.content AS content,
            b.liked AS liked,
            b.comments AS comments,
            b.create_time AS create_time,
            b.update_time AS update_time,
            u.nick_name AS nick_name,
            u.icon AS icon
        FROM
            blog b
        INNER JOIN
            bk_user u ON b.user_id = u.id
        WHERE
            b.id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
</mapper>
